name: "Test Action"

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main

env:
  TOKEN_CREDENTIALS: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
  REPO: ${{ github.repository }}
  WORKFLOW_ID: "test-workflow.yml"
  REF: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
  WAIT_INTERVAL: "10s"
  TIMEOUT: "10m"
  DEBUG: "yes"

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/iron"

      # Install dependencies
      - name: Install Dependencies
        run: npm i

      # Install dependencies
      - name: Run Tests
        run: |
          npm run ca && npm run test

      # Build the action (if TypeScript is used)
      - name: Build Action
        run: npm run build

  # Single job for the no-pattern test (must run alone)
  integration-tests-token-no-pattern:
    name: Triggering With Token
    runs-on: ubuntu-latest
    needs:
      - unit-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: "Should Pass Without Using Run Pattern"
        id: test-simple
        uses: ./
        with:
          credentials: ${{ env.TOKEN_CREDENTIALS }}
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: '{"Timeout": "5"}'
          wait_interval: ${{ env.WAIT_INTERVAL }}
          timeout: ${{ env.TIMEOUT }}
          action: "trigger-and-wait"
          debug: ${{ env.DEBUG }}

      - name: "Validate"
        run: |
          test "${{ steps.test-simple.outputs.run_conclusion }}" = "success"

  # Matrix job for pattern-based tests that can run in parallel
  integration-tests-token-pattern:
    name: Triggering With Token and Run Pattern
    runs-on: ubuntu-latest
    needs:
      - integration-tests-token-no-pattern
    strategy:
      matrix:
        test_case:
          - name: "Using String Pattern Detection"
            pattern_id: "string"
            inputs: '{"Timeout": "5", "RunPattern": "string-pattern-${{ github.run_id }}"}'
            run_pattern: "string-pattern-${{ github.run_id }}"
            expected: "success"
          - name: "Using RegExp Pattern Detection"
            pattern_id: "regexp"
            inputs: '{"Timeout": "5", "RunPattern": "regexp-pattern-${{ github.run_id }}"}'
            run_pattern: 'regexp-pattern-\d+'
            expected: "success"
          - name: "Throwing Error Handling"
            pattern_id: "error"
            inputs: '{"Timeout": "5", "Throw": "yes", "RunPattern": "error-pattern-${{ github.run_id }}"}'
            run_pattern: "error-pattern-${{ github.run_id }}"
            expected: "failure"
            no_throw: "yes"
          - name: "Managing Timeout Handling"
            pattern_id: "timeout"
            inputs: '{"Timeout": "5", "RunPattern": "timeout-pattern-${{ github.run_id }}"}'
            run_pattern: "timeout-pattern-${{ github.run_id }}"
            expected: "timeout"
            wait_interval: "1000"
            timeout: "3000"
            no_throw: "yes"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: "Should Pass ${{ matrix.test_case.name }} (ID: ${{ matrix.test_case.pattern_id }}-${{ github.run_id }})"
        id: test-action
        uses: ./
        with:
          credentials: ${{ env.TOKEN_CREDENTIALS }}
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: ${{ matrix.test_case.inputs }}
          wait_interval: ${{ matrix.test_case.wait_interval || env.WAIT_INTERVAL }}
          timeout: ${{ matrix.test_case.timeout || env.TIMEOUT }}
          action: "trigger-and-wait"
          debug: ${{ env.DEBUG }}
          run_pattern: ${{ matrix.test_case.run_pattern }}
          no_throw: ${{ matrix.test_case.no_throw || '' }}

      - name: "Validate"
        run: |
          test "${{ steps.test-action.outputs.run_conclusion }}" = "${{ matrix.test_case.expected }}"

  # Sequential job for trigger/wait dependency tests
  integration-tests-token-trigger-and-wait:
    name: Triggering and Waiting Separately
    runs-on: ubuntu-latest
    needs:
      - integration-tests-token-no-pattern
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: "Should Pas Trigger Only"
        id: run-trigger-only
        uses: ./
        with:
          credentials: ${{ env.TOKEN_CREDENTIALS }}
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: '{"Timeout": "5", "RunPattern": "trigger-only-${{ github.run_id }}"}'
          wait_interval: ${{ env.WAIT_INTERVAL }}
          timeout: ${{ env.TIMEOUT }}
          action: "trigger-only"
          debug: ${{ env.DEBUG }}
          run_pattern: "trigger-only-${{ github.run_id }}"

      - name: "Validate"
        run: |
          test "${{ steps.run-trigger-only.outputs.run_conclusion }}" = "success"
          test -n "${{ steps.run-trigger-only.outputs.run_id }}"

      - name: "Should Pass Wait Only"
        id: run-wait-only
        uses: ./
        with:
          credentials: ${{ env.TOKEN_CREDENTIALS }}
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: '{"Timeout": "5", "RunPattern": "wait-only-${{ github.run_id }}"}'
          wait_interval: ${{ env.WAIT_INTERVAL }}
          timeout: ${{ env.TIMEOUT }}
          action: "wait-only"
          debug: ${{ env.DEBUG }}
          run_id: "${{ steps.run-trigger-only.outputs.run_id }}"

      - name: "[5] Verify Wait Only Success"
        run: |
          test "${{ steps.run-wait-only.outputs.run_conclusion }}" = "success"

  # Single job for the no-pattern test (must run alone)
  integration-tests-app-apd-private-key:
    name: Triggering With App Id and Private Key
    runs-on: ubuntu-latest
    needs:
      - integration-tests-token-pattern
      - integration-tests-token-trigger-and-wait
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: "Should Pass Without Using Run Pattern"
        id: test-simple
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}",
                "privateKey": "${{ secrets.GH_APP_WF_TRIGGER_KEY_BASE64 }}"
              }
            }
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: '{"Timeout": "5", "RunPattern": "app-and-private-key-pattern-${{ github.run_id }}"}'
          wait_interval: ${{ env.WAIT_INTERVAL }}
          timeout: ${{ env.TIMEOUT }}
          action: "trigger-and-wait"
          debug: ${{ env.DEBUG }}
          run_pattern: "app-and-private-key-pattern-${{ github.run_id }}"

      - name: "Validate"
        run: |
          test "${{ steps.test-simple.outputs.run_conclusion }}" = "success"

  # GitHub App-based testing (currently disabled)
  integration-tests-app-and-env-key:
    name: Triggering With App Id and Private Key (as env var)
    runs-on: ubuntu-latest
    needs:
      - integration-tests-app-apd-private-key
    strategy:
      matrix:
        test_case:
          - name: "When Using only App Id and Private Key as Env Var"
            credentials: |
              {
                "app": {
                  "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}"
                }
              }
            inputs: '{"Timeout": "5", "RunPattern": "app-only-pattern-${{ github.run_id }}"}'
            wait_interval: "10s"
            timeout: "10m"
            run_pattern: "app-only-pattern-${{ github.run_id }}"
          - name: "When Using App Id, Instalaltion Id and Private Key as Env Var"
            credentials: |
              {
                "app": {
                  "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}",
                  "installationId": "${{ vars.GH_APP_WF_TRIGGER_INSTALLATION_ID }}"
                }
              }
            inputs: '{"Timeout": "5", "RunPattern": "app-and-installation-pattern-${{ github.run_id }}"}'
            wait_interval: "10s"
            timeout: "10m"
            run_pattern: "app-and-installation-pattern-${{ github.run_id }}"
          - name: "When Using App Id, Owner and Private Key as Env Var"
            credentials: |
              {
                "app": {
                  "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}",
                  "owner": "${{ github.repository_owner }}"
                }
              }
            inputs: '{"Timeout": "5", "RunPattern": "app-and-owner-pattern-${{ github.run_id }}"}'
            wait_interval: "10s"
            timeout: "10m"
            run_pattern: "app-and-owner-pattern-${{ github.run_id }}"
          - name: "By Owner and Repo"
            credentials: |
              {
                "app": {
                  "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}",
                  "owner": "${{ github.repository_owner }}",
                  "repositories": ["workflow-trigger-wait"]
                }
              }
            inputs: '{"Timeout": "5", "RunPattern": "app-owner-and-repo-pattern-${{ github.run_id }}"}'
            wait_interval: "10s"
            timeout: "10m"
            run_pattern: "app-owner-and-repo-pattern-${{ github.run_id }}"
          - name: "By Repo Only"
            credentials: |
              {
                "app": {
                  "appId": "${{ vars.GH_APP_WF_TRIGGER_ID }}",
                  "repositories": ["workflow-trigger-wait"]
                }
              }
            inputs: '{"Timeout": "5", "RunPattern": "app-and-repo-pattern-${{ github.run_id }}"}'
            wait_interval: "10s"
            timeout: "10m"
            run_pattern: "app-and-repo-pattern-${{ github.run_id }}"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: "Should Pass ${{ matrix.test_case.name }}"
        id: test-github-app
        uses: ./
        with:
          credentials: ${{ matrix.test_case.credentials }}
          repo: ${{ env.REPO }}
          workflow_id: ${{ env.WORKFLOW_ID }}
          ref: ${{ env.REF }}
          inputs: ${{ matrix.test_case.inputs }}
          wait_interval: ${{ matrix.test_case.wait_interval }}
          timeout: ${{ matrix.test_case.timeout }}
          action: "trigger-and-wait"
          debug: ${{ env.DEBUG }}
          run_pattern: "${{ matrix.test_case.run_pattern }}"
        env:
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.GH_APP_WF_TRIGGER_KEY }}

      - name: "Validate"
        run: |
          test "${{ steps.test-github-app.outputs.run_conclusion }}" = "success"

  version-bump:
    name: Version Bump
    needs:
      - integration-tests-app-and-env-key
    if: ${{ ! contains(github.actor, '[bot]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Github App Token
        id: app-token-push
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GH_APP_PUSH_ID }}
          private-key: ${{ secrets.GH_APP_PUSH_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout repo (using token)
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token-push.outputs.token }}
          fetch-depth: 0

      - name: Increase Version
        id: version_step
        uses: dragoscops/bumpalicious@v2
        with:
          github_token: ${{ steps.app-token-push.outputs.token }}
          workspaces: .:node
          branch: ${{ github.ref }}
          pr: true
          pr_version_prefix: bump_version
          short_tag: true
