name: "Test Action"

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main

jobs:
  unit-test-action:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/iron"

      # Install dependencies
      - name: Install Dependencies
        run: npm i

      # Install dependencies
      - name: Run Tests
        run: |
          npm run ca && npm run test

      # Build the action (if TypeScript is used)
      - name: Build Action
        run: npm run build

  workflow-test-action:
    runs-on: ubuntu-latest
    needs:
      - unit-test-action
    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: "[1] (token) Run Simple Trigger And Wait (No Run Pattern)"
        id: run-simple-trigger-and-wait
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[1] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-simple-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-simple-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[2] (token) Run Simple Trigger And Wait (Using String RunPattern to detect the run)"
        id: run-string-pattern-trigger-and-wait
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5", "RunPattern": "run-pattern"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
          run_pattern: "run-pattern"

      - name: "[2] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-string-pattern-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-string-pattern-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[3] (token) Run Simple Trigger And Wait (Using RegExp RunPattern to detect the run)"
        id: run-regexp-pattern-trigger-and-wait
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5", "RunPattern": "run-regexp-pattern"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
          run_pattern: 'run-\w+-pattern'

      - name: "[3] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-regexp-pattern-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-regexp-pattern-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[4] (token) Run Trigger Only"
        id: run-trigger-only
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-only"
          debug: "yes"

      - name: "[4] (token) Verify Outputs"
        run: |
          echo "Run Id: ${{ steps.run-trigger-only.outputs.run_id }}"
          echo "Run Conclusion: ${{ steps.run-trigger-only.outputs.run_conclusion }}"
          if [[ "${{ steps.run-trigger-only.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[5] (token) Run Wait Only"
        id: run-wait-only
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "wait-only"
          debug: "yes"
          run_id: "${{ steps.run-trigger-only.outputs.run_id }}"

      - name: "[5] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-wait-only.outputs.run_conclusion }}"
          if [[ "${{ steps.run-wait-only.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[6] (token) Run Timeout Trigger And Wait"
        id: run-throw-trigger-and-wait
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5", "Throw": "yes"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
          no_throw: "yes"

      - name: "[6] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-throw-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-throw-trigger-and-wait.outputs.run_conclusion }}" != "failure" ]]; then exit 1; fi

          sleep 30

      - name: "[7] (token) Run Timeout Trigger And Wait"
        id: run-timeout-trigger-and-wait
        uses: ./
        with:
          credentials: '{ "token": "${{ secrets.GH_TOKEN_WF_TRIGGER }}" }'
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "1000"
          timeout: "3000"
          action: "trigger-and-wait"
          debug: "yes"
          no_throw: "yes"

      - name: "[7] (token) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-timeout-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-timeout-trigger-and-wait.outputs.run_conclusion }}" != "timeout" ]]; then exit 1; fi

          sleep 30

      - name: "[8] (github-app) Run Simple Trigger And Wait (By Installation Id)"
        id: run-app-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "installationId": "${{ secrets.GH_APP_INSTALLATION_ID }}",
                "privateKey": "${{ secrets.GH_APP_PRIVATE_KEY }}"
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[8] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[9a] (github-app) Run Simple Trigger And Wait (By Given Owner - Detecting Global InstallationId)"
        id: run-app-owner-a-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "in-env",
                "owner": "${{ github.repository_owner }}"
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
        env:
          GH_APP_PRIVATE_KEY: |
            ${{ secrets.GH_APP_PRIVATE_KEY_RAW }}

      - name: "[9a] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-owner-a-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-owner-a-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[9b] (github-app) Run Simple Trigger And Wait (By Given Owner - Detecting Global InstallationId)"
        id: run-app-owner-b-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "in-env",
                "owner": "${{ github.repository_owner }}"
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
        env:
          GITHUB_APP_PRIVATE_KEY: |
            ${{ secrets.GH_APP_PRIVATE_KEY_RAW }}

      - name: "[9b] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-owner-b-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-owner-b-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[10] (github-app) Run Simple Trigger And Wait (By Given Owner And Repo - Detecting By Repo InstallationId)"
        id: run-app-owner-repo-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "${{ secrets.GH_APP_PRIVATE_KEY }}",
                "owner": "${{ github.repository_owner }}",
                "repositories": ["workflow-trigger-wait"]
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[10] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-owner-repo-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-owner-repo-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[11] (github-app) Run Simple Trigger And Wait (By Given Repo - Detecting Owner and InstallationId)"
        id: run-app-repo-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "${{ secrets.GH_APP_PRIVATE_KEY }}",
                "repositories": ["workflow-trigger-wait"]
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[11] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-repo-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-repo-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[12] (github-app) Run Simple Trigger And Wait (Detecting Owner, Repo and InstallationId)"
        id: run-app-owner-repo-detect-trigger-and-wait
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "${{ secrets.GH_APP_PRIVATE_KEY }}"
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[12] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-owner-repo-detect-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-owner-repo-detect-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

      - name: "[13] (github-app) Run Simple Trigger And Wait (token regen)"
        id: run-app-token-regen
        uses: ./
        with:
          credentials: |
            {
              "app": {
                "appId": "${{ secrets.GH_APP_ID }}",
                "privateKey": "${{ secrets.GH_APP_PRIVATE_KEY }}",
                "owner": "${{ github.repository_owner }}"
              }
            }
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: ${{ github.ref_name }}
          inputs: '{"Timeout": "4000"}'
          wait_interval: "10m"
          timeout: "2h"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[13] (github-app) Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-app-token-regen.outputs.run_conclusion }}"
          if [[ "${{ steps.run-app-token-regen.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

          sleep 30

  version-bump:
    name: Version Bump
    needs:
      - unit-test-action
      - workflow-test-action
    if: ${{ ! contains(github.actor, '[bot]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Github App Token
        id: app-token-push
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GH_APP_PUSH_ID }}
          private-key: ${{ secrets.GH_APP_PUSH_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout repo (using token)
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token-push.outputs.token || secrets.GH_TOKEN_PUSH }}
          fetch-depth: 0

      - name: Increase Version
        id: version_step
        uses: ./
        with:
          github_token: ${{ secrets.GH_TOKEN_PUSH }}
          workspaces: .:node
          branch: ${{ github.ref }}
          pr: true
          pr_version_prefix: bump_version
          short_tag: true
