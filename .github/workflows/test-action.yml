name: "Test Action"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  unit-test-action:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Install dependencies
      - name: Run Tests
        run: |
          npm run ca && npm run test

      # Build the action (if TypeScript is used)
      - name: Build Action
        run: npm run build

  workflow-test-action:
    runs-on: ubuntu-latest
    needs:
      - unit-test-action
    steps:
      - name: "[1] Run Simple Trigger And Wait"
        id: run-simple-trigger-and-wait
        uses: dragoscops/workflow-trigger-wait@main
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: "main"
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"

      - name: "[1] Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-simple-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-simple-trigger-and-wait.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

      - name: "[2] Run Trigger Only"
        id: run-trigger-only
        uses: dragoscops/workflow-trigger-wait@main
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: "main"
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-only"
          debug: "yes"

      - name: "[2] Verify Outputs"
        run: |
          echo "Run Id: ${{ steps.run-trigger-only.outputs.run_id }}"
          echo "Run Conclusion: ${{ steps.run-trigger-only.outputs.run_conclusion }}"
          if [[ "${{ steps.run-trigger-only.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

      - name: "[3] Run Wait Only"
        id: run-wait-only
        uses: dragoscops/workflow-trigger-wait@main
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: "main"
          inputs: '{"Timeout": "5"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "wait-only"
          debug: "yes"
          run_id: "${{ steps.run-trigger-only.outputs.run_id }}"

      - name: "[3] Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-wait-only.outputs.run_conclusion }}"
          if [[ "${{ steps.run-wait-only.outputs.run_conclusion }}" != "success" ]]; then exit 1; fi

      - name: "[4] Run Timeout Trigger And Wait"
        id: run-throw-trigger-and-wait
        uses: dragoscops/workflow-trigger-wait@main
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: "main"
          inputs: '{"Timeout": "5", "Throw": "yes"}'
          wait_interval: "10000"
          timeout: "60000"
          action: "trigger-and-wait"
          debug: "yes"
          no_throw: "yes"

      - name: "[4] Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-throw-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-throw-trigger-and-wait.outputs.run_conclusion }}" != "failure" ]]; then exit 1; fi

      - name: "[5] Run Timeout Trigger And Wait"
        id: run-timeout-trigger-and-wait
        uses: dragoscops/workflow-trigger-wait@main
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          repo: ${{ github.repository }}
          workflow_id: "test-workflow.yml"
          ref: "main"
          inputs: '{"Timeout": "5"}'
          wait_interval: "1000"
          timeout: "3000"
          action: "trigger-and-wait"
          debug: "yes"
          no_throw: "yes"

      - name: "[5] Verify Outputs"
        run: |
          echo "Run Conclusion: ${{ steps.run-timeout-trigger-and-wait.outputs.run_conclusion }}"
          if [[ "${{ steps.run-timeout-trigger-and-wait.outputs.run_conclusion }}" != "timeout" ]]; then exit 1; fi
